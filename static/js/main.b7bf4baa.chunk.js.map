{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","isMovieExist","setІsMovieExist","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","fetch","then","response","json","getMovie","data","Response","Title","Plot","Poster","imdbID","App","state","some","film","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"yyEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,OCF3BG,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,IAAnC,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA0BD,mBAAS,MAAnC,mBAAOL,EAAP,KAAcO,EAAd,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAwBA,OACE,oCACE,0BAAMhB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQiB,QAAQ,eAAjC,eAGA,yBAAKjB,UAAU,WACb,2BACEA,UAAWe,EAAe,SAAW,kBACrCG,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZC,MAAOzB,EACP0B,SAAU,SAACC,GACTV,EAASU,EAAMC,OAAOH,OACtBL,GAAgB,OAIrBD,GACC,uBAAGf,UAAU,kBAAb,yCAKJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEkB,KAAK,SACLlB,UAAU,kBACVyB,QArDM,YARH,SAAA7B,GAAK,OAAI8B,MADT,yDAC0B9B,GACxC+B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAQzBC,CAASlC,GACN+B,MAAK,SAACI,GACL,IAAsB,IAAlBA,EAAKC,SAIP,OAHAhB,GAAgB,QAChBF,EAAS,MAKXA,EAAS,CACPlB,MAAOmC,EAAKE,MACZpC,YAAakC,EAAKG,KAClBpC,OAAQiC,EAAKI,OACbpC,QAAQ,8BAAD,OAAgCgC,EAAKK,OAArC,KACP3B,OAAQsB,EAAKK,SAEfpB,GAAgB,GAChBH,EAAS,SAgCL,iBAQF,yBAAKb,UAAU,WACb,4BACEkB,KAAK,SACLlB,UAAU,oBACVyB,QAAS,WACPd,EAASJ,GACTO,EAAS,QALb,sBAaN,yBAAKd,UAAU,aACZO,GACC,oCACE,wBAAIP,UAAU,SAAd,WACA,kBAAC,EAAcO,Q,OCpFd8B,EAAb,4MACEC,MAAQ,CACNjC,OAAQ0B,GAFZ,EAKEpB,SAAW,SAACJ,GACLA,IAIA,EAAK+B,MAAMjC,OAAOkC,MAAK,SAAAC,GAAI,OAAIA,EAAK/B,SAAWF,EAAME,WACxD,EAAKgC,UAAS,SAAAH,GAAK,MAAK,CACtBjC,OAAO,GAAD,mBAAMiC,EAAMjC,QAAZ,CAAoBE,UAZlC,4CAiBE,WACE,IAAQF,EAAWqC,KAAKJ,MAAhBjC,OAER,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAAU+B,KAAK/B,iBA1BpC,GAAyBgC,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b7bf4baa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovieCard.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const MovieCard = ({\r\n  title,\r\n  description = '',\r\n  imgUrl,\r\n  imdbUrl,\r\n}) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\nconst BASE_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=75447f4c&t=';\nconst getMovie = title => fetch(BASE_URL + title)\n  .then(response => response.json());\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [isMovieExist, setІsMovieExist] = useState(false);\n\n  const findMovie = () => {\n    getMovie(title)\n      .then((data) => {\n        if (data.Response === false) {\n          setІsMovieExist(false);\n          setMovie(null);\n\n          return;\n        }\n\n        setMovie({\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n          imdbId: data.imdbID,\n        });\n        setІsMovieExist(false);\n        setTitle('');\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              className={isMovieExist ? 'input ' : 'is-danger input'}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setІsMovieExist(true);\n              }}\n            />\n          </div>\n          {isMovieExist || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    if (!movie) {\n      return;\n    }\n\n    if (!this.state.movies.some(film => film.imdbId === movie.imdbId)) {\n      this.setState(state => ({\n        movies: [...state.movies, movie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}